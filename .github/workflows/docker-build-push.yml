name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Build platformları (comma ile ayırın, örn: linux/amd64,linux/arm64)'
        required: true
        default: 'linux/amd64,linux/arm64'
      image_prefix:
        description: 'Docker image prefix'
        required: true
        default: 'turknethub'
      build_all:
        description: 'Tüm Dockerfile''ları build et'
        type: boolean
        default: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get changed files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Build and push Docker images
        run: |
          if [ "${{ github.event.inputs.build_all }}" = "true" ]; then
            # Tüm Dockerfile'ları bul
            changed_dirs=($(find . -name "Dockerfile" -exec dirname {} \;))
          else
            # Sadece değişen dosyaları kontrol et
            changed_dirs=()
            for added_modified_file in ${{ steps.files.outputs.added_modified }}; do
              if [[ "$added_modified_file" == *"Dockerfile" ]] || [[ "$added_modified_file" == *"version" ]]; then
                dir=$(dirname "$added_modified_file")
                changed_dirs+=("$dir")
              fi
            done
          fi

          changed_dirs=($(echo "${changed_dirs[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))

          for dir in "${changed_dirs[@]}"; do
            dockerfile="$dir/Dockerfile"
            base_dir=$(echo $dir | cut -d'/' -f1)
            sub_dir=$(basename $dir)

            if [ "$base_dir" = "wolfios-base" ]; then
              image_name="tn-wolfios"
            else
              if [ "$base_dir" = "3rd-party" ]; then
                image_name="$sub_dir"
              else
                image_name="$sub_dir-$base_dir"
              fi
            fi

            version=$(cat $dir/version)

            full_tag=${{ github.event.inputs.image_prefix }}/$image_name:$version-${{ github.run_number }}

            docker buildx build --platform=${{ github.event.inputs.platforms }} --tag $full_tag -f $dockerfile $dir --push
          done