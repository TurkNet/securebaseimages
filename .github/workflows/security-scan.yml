name: Build and Security Scan Docker Images

on:
  schedule:
    - cron: "0 0,6,12,18 * * *"
  workflow_dispatch:

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub (Optional)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images for all directories and run Trivy scan
        run: |
          find . -name 'Dockerfile' | while read dockerfile; do
            dir=$(dirname "$dockerfile")
            image_name="local-$(basename $dir)"

            echo "Building Docker image for $dir..."
            docker build -t "$image_name" "$dir" 
            
            echo "Running Trivy scan for image $image_name..."
            trivy image --format json -o "$dir/trivy-report.json" "$image_name"

          done

      - name: Parse all Trivy reports and create or update issue
        run: |
          issue_title="Security Vulnerabilities Report"

          existing_issue=$(gh issue list --repo ${{ github.repository }} --search "$issue_title" --json title --jq '.[0].title')

          if [ "$existing_issue" = "$issue_title" ]; then
            issue_number=$(gh issue list --repo ${{ github.repository }} --search "$issue_title" --json number --jq '.[0].number')
          else
            issue_number=$(gh issue create --title "$issue_title" --label "security" --body "New security vulnerabilities found. See the details below:" --json number --jq '.number')
          fi

          find . -name 'trivy-report.json' | while read report; do
            jq '.[] | select(.Vulnerabilities != null) | .Vulnerabilities[]' "$report" > vulnerabilities.json
            if [ -s vulnerabilities.json ]; then
              for row in $(cat vulnerabilities.json | jq -r '. | @base64'); do
                _jq() {
                  echo ${row} | base64 --decode | jq -r ${1}
                }
                TITLE="$(_jq '.Title')"
                DESCRIPTION="$(_jq '.Description')"
                SEVERITY="$(_jq '.Severity')"
                CVE="$(_jq '.CVE')"

                gh issue comment $issue_number --body "**$TITLE**\n- Severity: $SEVERITY\n- Description: $DESCRIPTION\n- CVE: $CVE"
              done
            fi
          done
